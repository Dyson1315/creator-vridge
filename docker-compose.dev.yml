version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: creator_vridge
      POSTGRES_PASSWORD: dev_password_2024
      POSTGRES_DB: creator_vridge_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U creator_vridge"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - creator-vridge-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - creator-vridge-network

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev-dependencies
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://creator_vridge:dev_password_2024@postgres:5432/creator_vridge_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_key_2024_CreatorVridge
      JWT_EXPIRES_IN: 7d
      BCRYPT_ROUNDS: 12
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    command: sh -c "npx prisma migrate deploy && npx prisma db seed && npm run dev"
    networks:
      - creator-vridge-network

  # Frontend Next.js (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev-dependencies
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      NODE_ENV: development
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - creator-vridge-network

volumes:
  postgres_data:
  redis_data:
  backend_uploads:

networks:
  creator-vridge-network:
    driver: bridge